{"ast":null,"code":"var _jsxFileName = \"D:\\\\DOCtoPDF\\\\doc-to-pdf\\\\frontend\\\\src\\\\components\\\\DocToPdfConverter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocToPdfConverter = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setError(null);\n    setSuccess(false);\n  };\n  const handleConvert = async () => {\n    if (!file) {\n      setError(\"Please select a file first.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n    const formData = new FormData();\n    formData.append(\"file\", file); // Append the file to FormData\n\n    try {\n      const response = await axios.post(\"http://localhost:3001/convert\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n\n      // Convert the response to a Blob and create a download link\n      const fileBlob = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      const downloadUrl = URL.createObjectURL(fileBlob);\n      const link = document.createElement(\"a\");\n      link.href = downloadUrl;\n      link.download = \"converted-file.pdf\";\n      link.click();\n      setSuccess(true); // Set success state\n    } catch (error) {\n      console.error(\"Error during conversion:\", error);\n      setError(\"Conversion failed. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-center mb-4\",\n      children: \"Convert DOCX to PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \".docx\",\n        className: \"mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 text-center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-500 text-center\",\n      children: \"File converted successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConvert,\n        disabled: loading,\n        className: \"px-4 py-2 bg-blue-500 text-white rounded-lg\",\n        children: loading ? \"Converting...\" : \"Convert to PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(DocToPdfConverter, \"id3rT7PqGOrvaT+H0EJ5TllzLQc=\");\n_c = DocToPdfConverter;\nexport default DocToPdfConverter;\nvar _c;\n$RefreshReg$(_c, \"DocToPdfConverter\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DocToPdfConverter","_s","file","setFile","loading","setLoading","error","setError","success","setSuccess","handleFileChange","e","target","files","handleConvert","formData","FormData","append","response","post","headers","fileBlob","Blob","data","type","downloadUrl","URL","createObjectURL","link","document","createElement","href","download","click","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","accept","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/DOCtoPDF/doc-to-pdf/frontend/src/components/DocToPdfConverter.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DocToPdfConverter = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setError(null);\r\n    setSuccess(false);\r\n  };\r\n\r\n  const handleConvert = async () => {\r\n    if (!file) {\r\n      setError(\"Please select a file first.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(false);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file); // Append the file to FormData\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3001/convert\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      // Convert the response to a Blob and create a download link\r\n      const fileBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n      const downloadUrl = URL.createObjectURL(fileBlob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = downloadUrl;\r\n      link.download = \"converted-file.pdf\";\r\n      link.click();\r\n\r\n      setSuccess(true); // Set success state\r\n    } catch (error) {\r\n      console.error(\"Error during conversion:\", error);\r\n      setError(\"Conversion failed. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold text-center mb-4\">Convert DOCX to PDF</h1>\r\n      <div className=\"flex justify-center\">\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n          accept=\".docx\"\r\n          className=\"mb-4\"\r\n        />\r\n      </div>\r\n      {error && <p className=\"text-red-500 text-center\">{error}</p>}\r\n      {success && <p className=\"text-green-500 text-center\">File converted successfully!</p>}\r\n      <div className=\"flex justify-center\">\r\n        <button\r\n          onClick={handleConvert}\r\n          disabled={loading}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-lg\"\r\n        >\r\n          {loading ? \"Converting...\" : \"Convert to PDF\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocToPdfConverter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,gBAAgB,GAAIC,CAAC,IAAK;IAC9BR,OAAO,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1BN,QAAQ,CAAC,IAAI,CAAC;IACdE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACZ,IAAI,EAAE;MACTK,QAAQ,CAAC,6BAA6B,CAAC;MACvC;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACdE,UAAU,CAAC,KAAK,CAAC;IAEjB,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEf,IAAI,CAAC,CAAC,CAAC;;IAE/B,IAAI;MACF,MAAMgB,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,+BAA+B,EAAEJ,QAAQ,EAAE;QAC3EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;;MAEF;MACA,MAAMC,QAAQ,GAAG,IAAIC,IAAI,CAAC,CAACJ,QAAQ,CAACK,IAAI,CAAC,EAAE;QAAEC,IAAI,EAAE;MAAkB,CAAC,CAAC;MACvE,MAAMC,WAAW,GAAGC,GAAG,CAACC,eAAe,CAACN,QAAQ,CAAC;MACjD,MAAMO,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGN,WAAW;MACvBG,IAAI,CAACI,QAAQ,GAAG,oBAAoB;MACpCJ,IAAI,CAACK,KAAK,CAAC,CAAC;MAEZxB,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACd4B,OAAO,CAAC5B,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDC,QAAQ,CAAC,sCAAsC,CAAC;IAClD,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKoC,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCrC,OAAA;MAAIoC,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5EzC,OAAA;MAAKoC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClCrC,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXiB,QAAQ,EAAE/B,gBAAiB;QAC3BgC,MAAM,EAAC,OAAO;QACdP,SAAS,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLlC,KAAK,iBAAIP,OAAA;MAAGoC,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAE9B;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5DhC,OAAO,iBAAIT,OAAA;MAAGoC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtFzC,OAAA;MAAKoC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClCrC,OAAA;QACE4C,OAAO,EAAE7B,aAAc;QACvB8B,QAAQ,EAAExC,OAAQ;QAClB+B,SAAS,EAAC,6CAA6C;QAAAC,QAAA,EAEtDhC,OAAO,GAAG,eAAe,GAAG;MAAgB;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvC,EAAA,CAzEID,iBAAiB;AAAA6C,EAAA,GAAjB7C,iBAAiB;AA2EvB,eAAeA,iBAAiB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}